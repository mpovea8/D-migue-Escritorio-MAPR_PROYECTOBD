Excepcion 1.- F_GET_SALARIO
-------------------------------------------------------------------------
CREATE OR REPLACE FUNCTION F_GET_SALARIO
(apl varchar2)
RETURN NUMBER
IS
  sal NUMBER;
BEGIN
  SELECT salario INTO sal
  	FROM emple 
  		where apellido like apl;
RETURN sal;
EXCEPTION
  WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('La unica fila del select no devolvió valores') ;
    	return -1;
  WHEN TOO_MANY_ROWS THEN
    DBMS_OUTPUT.PUT_LINE('La fila del select devuelve más de 1 fila') ;
    	return -1;
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error inesperado') ;
    	return -1;
END;

DECLARE
x number;
z varchar2(80) := 'REY';
BEGIN
x:=F_GET_SALARIO(z);
DBMS_OUTPUT.PUT_LINE('EL SALARIO DE '|| z || ' ES ' || x);
END;

---------------------------------------------------------------------------
Excepcion 2.- P_UPD_APELLIDO
---------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE P_UPD_APELLIDO
(num NUMBER, apl varchar2)
IS
  NULO EXCEPTION;
  PRAGMA EXCEPTION_INIT(NULO, -01407);
BEGIN
  update emple
  set apellido = apl
  where emp_no like num;
  EXCEPTION
    WHEN NULO THEN
    DBMS_OUTPUT.PUT_LINE('ERROR. El apellido del empleado no puede ser nulo'); 
END;

DECLARE
BEGIN
P_UPD_APELLIDO(,'');
END;
---------------------------------------------------------------------------
Excepcion 3.- P_UPD_SALARIO
---------------------------------------------------------------------------
CREATE OR REPLACE PROCEDURE P_UPD_SALARIO
(numb NUMBER, sal number)
IS
BEGIN
  update emple
  set salario = sal
  where emp_no = numb;
  IF SQL%NOTFOUND THEN
    RAISE_APPLICATION_ERROR(-20001,'No existe el empleado indicado0');
  END IF;  
END;

DECLARE
BEGIN
P_UPD_SALARIO(,);
END;
---------------------------------------------------------------------------
Excepcion 4.- Modificación P_UPD_SALARIO
---------------------------------------------------------------------------
CREATE TABLE TABLA_AVISOS (
  msg varchar2(200),
  PRIMARY KEY(msg)
);

CREATE OR REPLACE PROCEDURE P_UPD_SALARIO
(num NUMBER, sal number)
IS
direc_sal number(9);
dpt_empl number(9);
ofi_empl varchar2(10);
alto_sal EXCEPTION;
BEGIN
  select oficio into ofi_empl from emple where emp_no = num;
  select dept_no into dpt_empl from emple where emp_no = num;
  select salario into direc_sal from emple where oficio like 'DIRECTOR' and dept_no = dpt_empl group by salario;
  
  IF (ofi_empl != 'PRESIDENTE' or ofi_empl != 'DIRECTOR') and sal > direc_sal THEN
    RAISE alto_sal;
  else
    update emple
    set salario = sal
    where emp_no = num;
    IF SQL%NOTFOUND THEN
      RAISE_APPLICATION_ERROR(-20001,'No existe el empleado indicado');
    END IF;
  end if; 
  
EXCEPTION
WHEN alto_sal THEN
DBMS_OUTPUT.PUT_LINE('Sueldo demasiado alto');
INSERT INTO TABLA_AVISOS(msg) VALUES ('El empleado número'|| num ||' no puede tener un salario de '|| sal ||' euros ya que es mayor que la de su director, '||direc_sal||' euros');
WHEN NO_DATA_FOUND THEN
DBMS_OUTPUT.PUT_LINE('No existe el empleado con codigo '|| num);
END;

DECLARE
BEGIN
P_UPD_SALARIO(,);
END;
